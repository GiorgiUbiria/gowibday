---
import "../styles/index.css";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HBD GOWUNA</title>
  </head>
  <body>
    <div class="container">
      <div class="one">
        <h1 class="one">
          <span data-node-name="greeting">Hey</span>
          <span data-node-name="name">Lydia</span>
        </h1>
        <p class="two" data-node-name="greetingText">
          I really like your name btw!
        </p>
      </div>
      <div class="three">
        <p data-node-name="text1">It's your birthday!!! :D</p>
      </div>
      <div class="four">
        <div class="text-box">
          <p class="hbd-chatbox" data-node-name="textInChatBox">
            Happy birthday to you!! Yeee! Many many happy blah...
          </p>
          <p class="fake-btn" data-node-name="sendButtonLabel">Send</p>
        </div>
      </div>
      <div class="five">
        <p class="idea-1" data-node-name="text2">
          That's what I was going to do.
        </p>
        <p class="idea-2" data-node-name="text3">But then I stopped.</p>
        <p class="idea-3">
          <span data-node-name="text4"
            >I realised, I wanted to do something</span
          >
          <strong data-node-name="text4Adjective">special</strong>.
        </p>
        <p class="idea-4" data-node-name="text5Entry">Because,</p>
        <p class="idea-5">
          <span data-node-name="text5Content">You are Special</span>
          <span class="smiley" data-node-name="smiley">:)</span>
        </p>
        <p class="idea-6">
          <span data-node-name="bigTextPart1">S</span>
          <span data-node-name="bigTextPart2">O</span>
        </p>
      </div>
      <div class="six">
        <img
          src="img/lydia2.png"
          alt=""
          class="lydia-dp"
          data-node-name="imagePath"
        />
        <img src="img/hat.svg" alt="" class="hat" />
        <div class="wish">
          <h3 class="wish-hbd" data-node-name="wishHeading">Happy Birthday!</h3>
          <h5 data-node-name="wishText">
            May the js.prototypes always be with you! ;)
          </h5>
        </div>
      </div>
      <div class="seven">
        <div class="baloons">
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon1.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon1.svg" alt="" />
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon1.svg" alt="" />
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon1.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon1.svg" alt="" />
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon1.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon1.svg" alt="" />
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon1.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
          <img src="img/ballon1.svg" alt="" />
          <img src="img/ballon2.svg" alt="" />
          <img src="img/ballon1.svg" alt="" />
          <img src="img/ballon3.svg" alt="" />
        </div>
      </div>
      <div class="eight">
        <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="20"></circle>
        </svg>
        <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="20"></circle>
        </svg>
        <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="20"></circle>
        </svg>
        <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="20"></circle>
        </svg>
        <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="20"></circle>
        </svg>
        <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="20"></circle>
        </svg>
        <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="20"></circle>
        </svg>
        <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="20"></circle>
        </svg>
        <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="20"></circle>
        </svg>
      </div>
      <div class="nine">
        <p data-node-name="outroText">
          Okay, now come back and tell me if you liked it.
        </p>
        <p id="replay" data-node-name="replayText">
          Or click, if you want to watch it again.
        </p>
        <p class="last-smile" data-node-name="outroSmiley">:)</p>
        <p class="msgp" data-node-name="msgp">:)</p>
        <img
          src="img/tako.png"
          alt=""
          class="tako-dp"
          data-node-name="takoImage"
        />
      </div>
    </div>
  </body>
</html>

<script
  is:inline
  src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.3/TweenMax.min.js"
></script>

<script>
  const obj = {
    greeting: "პრივეტ",
    name: "გოწი",
    greetingText: "გაკოცე ტაკოზე BTW...",
    wishText: "გისურვებ ყველაფერ საუკეთესოს ჩემთან ერთად",
    imagePath: "img/lydia2.png",
    text1: "რა ლამაზი დღეა &#x1f973;",
    textInChatBox: "შესანიშნავი უდავოდ ?!",
    sendButtonLabel: "ფშუხ გავაგზავნოთ",
    text2: "ამას ვაპირებდი...",
    text3: "მაგრამ &#9995;",
    text4: "მინდოდა რაიმე",
    text4Adjective: "განსაკუთრებული გამეკეთებინა",
    text5Entry: "რადგან",
    text5Content: "შენც განსაკუთრებული ხარ &#128150;",
    smiley: ":)",
    bigTextPart1: "ამი",
    bigTextPart2: "ტომ",
    wishHeading: "#დაბადების დღეს გილოცავ სიცოცხლევ",
    outroText: "კაი ქშ დაიბანე ახლა",
    replayText: "ან თავიდან უყურე რავიცი რავიცი...",
    outroSmiley: ":)",
    takoImage: "img/tako.png",
    msgp: "ამასთან ვწევარ სხვათაშორის"
  };

  // Animation Timeline
  const animationTimeline = () => {
    // Spit chars that needs to be animated individually
    const textBoxChars = document.getElementsByClassName("hbd-chatbox")[0];
    const hbd = document.getElementsByClassName("wish-hbd")[0];

    textBoxChars.innerHTML = `<span>${textBoxChars.innerHTML
      .split("")
      .join("</span><span>")}</span`;

    hbd.innerHTML = `<span>${hbd.innerHTML
      .split("")
      .join("</span><span>")}</span`;

    const ideaTextTrans = {
      opacity: 0,
      y: -20,
      rotationX: 5,
      skewX: "15deg",
    };

    const ideaTextTransLeave = {
      opacity: 0,
      y: 20,
      rotationY: 5,
      skewX: "-15deg",
    };

    const tl = new TimelineMax();

    tl.to(".container", 0.1, {
      visibility: "visible",
    })
      .from(".one", 0.7, {
        opacity: 0,
        y: 10,
      })
      .from(".two", 0.4, {
        opacity: 0,
        y: 10,
      })
      .to(
        ".one",
        0.7,
        {
          opacity: 0,
          y: 10,
        },
        "+=2.5",
      )
      .to(
        ".two",
        0.7,
        {
          opacity: 0,
          y: 10,
        },
        "-=1",
      )
      .from(".three", 0.7, {
        opacity: 0,
        y: 10,
        // scale: 0.7
      })
      .to(
        ".three",
        0.7,
        {
          opacity: 0,
          y: 10,
        },
        "+=2",
      )
      .from(".four", 0.5, {
        scale: 0.1,
        opacity: 0,
      })
      .from(".fake-btn", 0.3, {
        scale: 0.2,
        opacity: 0,
      })
      .staggerTo(
        ".hbd-chatbox span",
        0.5,
        {
          visibility: "visible",
        },
        0.05,
      )
      .to(".fake-btn", 0.1, {
        backgroundColor: "rgb(127, 206, 248)",
      })
      .to(
        ".four",
        0.3,
        {
          scale: 0.1,
          opacity: 0,
          y: -150,
        },
        "+=0.7",
      )
      .from(".idea-1", 0.7, ideaTextTrans)
      .to(".idea-1", 0.7, ideaTextTransLeave, "+=1.5")
      .from(".idea-2", 0.7, ideaTextTrans)
      .to(".idea-2", 0.7, ideaTextTransLeave, "+=1.5")
      .from(".idea-3", 0.7, ideaTextTrans)
      .to(".idea-3 strong", 0.5, {
        scale: 1.2,
        x: 10,
        background:
          "linear-gradient(to right, rgb(21, 161, 237), red, orange, yellow, green, blue, indigo, violet)",
        color: "#fff",
      })
      .to(".idea-3", 0.7, ideaTextTransLeave, "+=1.5")
      .from(".idea-4", 0.7, ideaTextTrans)
      .to(".idea-4", 0.7, ideaTextTransLeave, "+=1.5")
      .from(
        ".idea-5",
        0.7,
        {
          rotationX: 15,
          rotationZ: -10,
          skewY: "-5deg",
          y: 50,
          z: 10,
          opacity: 0,
        },
        "+=0.5",
      )
      .to(
        ".idea-5 .smiley",
        0.7,
        {
          rotation: 90,
          x: 8,
        },
        "+=0.4",
      )
      .to(
        ".idea-5",
        0.7,
        {
          scale: 0.2,
          opacity: 0,
        },
        "+=2",
      )
      .staggerFrom(
        ".idea-6 span",
        0.8,
        {
          scale: 3,
          opacity: 0,
          rotation: 15,
          ease: Expo.easeOut,
        },
        0.2,
      )
      .staggerTo(
        ".idea-6 span",
        0.8,
        {
          scale: 3,
          opacity: 0,
          rotation: -15,
          ease: Expo.easeOut,
        },
        0.2,
        "+=1",
      )
      .staggerFromTo(
        ".baloons img",
        2.5,
        {
          opacity: 0.9,
          y: 1400,
        },
        {
          opacity: 1,
          y: -1000,
        },
        0.2,
      )
      .from(
        ".lydia-dp",
        0.5,
        {
          scale: 3.5,
          opacity: 0,
          x: 25,
          y: -25,
          rotationZ: -45,
        },
        "-=2",
      )
      .from(".hat", 0.5, {
        x: -120,
        y: 150,
        rotation: -180,
        opacity: 0,
      })
      .staggerFrom(
        ".wish-hbd span",
        0.7,
        {
          opacity: 0,
          y: -50,
          scale: 0.3,
          rotation: 150,
          skewX: "30deg",
          ease: Elastic.easeOut.config(1, 0.5),
        },
        0.1,
      )
      .staggerFromTo(
        ".wish-hbd span",
        0.7,
        {
          rotationY: 150,
        },
        {
          rotationY: 0,
          color: "#ff69b4",
          ease: Expo.easeOut,
        },
        0.1,
        "party",
      )
      .from(
        ".wish h5",
        0.5,
        {
          opacity: 0,
          y: 10,
          skewX: "-15deg",
        },
        "party",
      )
      .staggerTo(
        ".eight svg",
        1.5,
        {
          visibility: "visible",
          opacity: 0,
          scale: 80,
          repeat: 4,
          repeatDelay: 1.4,
        },
        0.3,
      )
      .to(".six", 0.5, {
        opacity: 0,
        y: 30,
        zIndex: "-1",
      })
      .staggerFrom(".nine p", 1, ideaTextTrans, 1.2)
      .to(
        ".last-smile",
        0.5,
        {
          rotation: 90,
        },
        "+=1",
      )
      .staggerFrom(".last-smile", 1, {scale: 1}, 1.2)
      .to(
        ".msgp",
        0.5,
        {
          scale: 1.5
        },
        "+=1",
      )
      .from(
        ".tako-dp",
        0.5,
        {
          opacity: 0,
          x: 25,
          y: -25,
        },
        "-=2",
      );

    const replyBtn = document.getElementById("replay");
    replyBtn.addEventListener("click", () => {
      tl.restart();
    });
  };

  const dataArr = Object.keys(obj);
  dataArr.forEach((customData, index) => {
    if (obj[customData] !== "") {
      if (customData === "imagePath" || customData === "takoImage") {
        document
          .querySelector(`[data-node-name*="${customData}"]`)
          .setAttribute("src", obj[customData]);
      } else {
        document.querySelector(`[data-node-name*="${customData}"]`).innerHTML =
          obj[customData];
      }
    }

    if (index === dataArr.length - 1) {
      animationTimeline();
    }
  });
</script>
